<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ync.mapper.SongMapper">

	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							artist_name like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							artist_type like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							gender like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="getList" resultType="kr.ync.domain.SongVO">
	<![CDATA[
		select * from song where song_idx > 0 
		]]>
	</select>

	<select id="frontMain" resultType="kr.ync.domain.SongVO">
		<![CDATA[
		select * from song where song_idx between 21 and 26
		]]>
	</select>

	<select id="frontMain2" resultType="kr.ync.domain.SongVO">
		<![CDATA[
		select * from song where song_idx between 27 and 32
		]]>
	</select>

	<select id="front12" resultType="kr.ync.domain.SongVO">
		<![CDATA[
		select * from song where rownum <= 12
		]]>
	</select>


	<select id="front_video" resultType="kr.ync.domain.SongVO">
		<![CDATA[
			select song_name,
				   artist_name,
       			   song_video
			from   song
			where song_video is not null
		]]>
	</select>

	<select id="front_SongRandom" resultType="kr.ync.domain.SongVO">
		<![CDATA[
		select * from(
		select * from song
		order by DBMS_RANDOM.RANDOM
		) where rownum < 10
		]]>
	</select>

	<select id="frontArtist_get" resultType="kr.ync.domain.SongVO">
		<![CDATA[
		select * from song 
		where artist_idx = #{artist_idx}
		]]>
	
	</select>


	<insert id="insert">
		insert into song (song_idx, song_name, album_name,
		artist_name, song_img_path, mp3_path, lyc_path, lyrics, composition,
		album_idx, artist_idx, genre, song_video)
		values (seq_song.nextval,
		#{song_name},
		#{album_name}, #{artist_name}, #{song_img_path},
		#{mp3_path}, #{lyc_path},
		#{lyrics},
		#{composition} ,#{album_idx},
		#{artist_idx}, #{genre}, #{song_video})
	</insert>

	<insert id="insertSelectKey">

		<selectKey keyProperty="song_idx" order="BEFORE"
			resultType="int">
			select seq_song.nextval from dual
		</selectKey>

		insert into song (song_idx, song_name, album_name, artist_name,
		song_img_path, mp3_path, lyc_path, lyrics, composition,
		album_idx,
		artist_idx, genre, song_video)
		values (#{song_idx}, #{song_name},
		#{album_name},
		#{artist_name}, #{song_img_path}, #{mp3_path},
		#{lyc_path}, #{lyrics},
		#{composition} ,#{album_idx}, #{artist_idx},
		#{genre}, #{song_video})
	</insert>

	<select id="read" resultType="kr.ync.domain.SongVO">
		select * from song where
		song_idx =
		#{song_idx}
	</select>

	<select id="frontAlbum_get" resultType="kr.ync.domain.SongVO">
		select * from song where
		album_idx = #{album_idx}
	</select>


	<delete id="delete">
		delete song where song_idx = #{song_idx}
	</delete>

	<update id="update">
		update song
		set
		song_name = #{song_name},
		album_name
		=#{album_name},
		artist_name = #{artist_name},
		song_img_path =
		#{song_img_path},
		mp3_path = #{mp3_path},
		lyc_path = #{lyc_path},
		lyrics
		= #{lyrics},
		composition = #{composition},
		album_idx = #{album_idx},
		artist_idx = #{artist_idx},
		genre = #{genre},
		song_video = #{song_video}
		where song_idx =
		#{song_idx}
	</update>



	<select id="getListWithPaging" resultType="kr.ync.domain.SongVO">
		<![CDATA[
		SELECT	song_idx,
				song_name,
				album_name,
				artist_name,
				song_img_path,
				mp3_path,
				lyc_path,
				lyrics,
				composition,
				album_idx,
				artist_idx,
				genre,
				song_video
		FROM	(SELECT /*+INDEX_DESC(song XPK음악) */
        				rownum rn,
        				song_idx,
						song_name,
						album_name,
						artist_name,
						song_img_path,
						mp3_path,
						lyc_path,
						lyrics,
						composition,
						album_idx,
						artist_idx,
						genre,
						song_video
      			FROM	song
				WHERE 
  		]]>
		<include refid="criteria"></include> 
      
		<![CDATA[    
      			rownum <= #{pageNum} * #{amount}
      			)
  		WHERE rn > (#{pageNum} -1) * #{amount}   
		]]>
	</select>

	<!-- <select id="getTotalCount" resultType="int"> <![CDATA[ select count(*) 
		from tbl_board where bno > 0 ]]> </select> -->
	<select id="getTotalCount" resultType="int">
		select count(*) from song where

		<include refid="criteria"></include>
		
		<![CDATA[
		song_idx > 0
		]]>
	</select>



</mapper>
